#!/usr/bin/env ruby

DEFAULT_TASK_FILE = "tasks.txt"

class Task
  attr_accessor :name, :lines, :desc

  def initialize()
    @name = nil
    @lines = []
    @desc = nil
  end
end

def parse(src)
  name = nil
  desc = nil
  lines = []
  is_first = true
  tasks = []

  task = Task.new

  src.each_line{ |line|
    # p line
    if /^([a-zA-Z_].*):/ =~ line
      name = $1
      if is_first
        is_first = false
      else
        tasks << task # 直前のタスクを確定
      end
      task = Task.new
      task.name = name
    else
      if /# desc: (.+)/ =~ line
        task.desc = $1
      else
        task.lines << line
      end
    end
  }
  tasks << task

  tasks
end

def list_tasks(tasks)
  tasks.each{ |t|
    puts "#{t.name}: #{t.desc}"
  }
end

def exec_task(tasks, task_name)
  task_setup = tasks.find{ |t| t.name == "__setup__"}
  task = tasks.find{ |t| t.name == task_name}

  tmp_sh = "./z_tmp.sh"
  open(tmp_sh, "wb"){ |f|
    task_setup.lines.each{ |line|
      f.print line
    }
    task.lines.each{ |line|
      f.print line
    }
  }

  # system "cat", tmp_sh
  system "bash", tmp_sh
  exit $?.to_i
end

def print_sample
  puts <<-EOB
# -*- mode: shell-script -*-
# This script was generated by simple_task_launcher.rb

__setup__:
  _print_project_dir() {
    ( cd "$(dirname "$0")"; pwd )
  }

  PROJECT_DIR="$(_print_project_dir)"

build:
  # desc: Build app
  cd ${PROJECT_DIR}/foo/bar
  build_command
  EOB
end

def print_help
  puts <<~EOB
    Example:
      {this_command} {task_name}

    Options:
      -l, --list
      --print-sample
      --help
  EOB
end

def read_tasks
  src = File.read(DEFAULT_TASK_FILE)
  parse(src)
end

# --------------------------------

case ARGV[0]
when "-l", "--list"
  tasks = read_tasks()
  list_tasks(tasks)
when "--print-sample"
  print_sample
when "--help"
  print_help
else
  tasks = read_tasks()
  exec_task(tasks, ARGV[0])
end
